/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package autofile;

import java.util.ArrayList;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author wis
 */
public class edituser extends javax.swing.JFrame {
    private String loginTime;
    private ArrayList<String> loggedInStudentIds;
    private java.util.Map<String, String> usernameToId = new java.util.HashMap<>();
    public edituser(ArrayList<String> studentIds, String loginTime) {
        initComponents();
        this.loginTime = loginTime;
        this.loggedInStudentIds = studentIds;
        loadStudentOptions(studentIds);
        jlblcpass.setVisible(false);
        jlblpass.setVisible(false);
        jlblusername.setVisible(false);
        jlblfname.setVisible(false);;
        jlbllname.setVisible(false);
        jlblsection.setVisible(false);
        jlblyear.setVisible(false);
        jlblstudentid.setVisible(false);
    }
    
    private void loadStudentOptions(ArrayList<String> studentIds) {
        try (Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/complab", "postgres", "postgres")) {
        String sql = "SELECT username, student_id FROM student WHERE student_id = ?";
        PreparedStatement pst = con.prepareStatement(sql);

        for (String id : studentIds) {
            pst.setString(1, id);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                String username = rs.getString("username");
                String studentId = rs.getString("student_id");

                jcomboStudentSelect.addItem(username);
                usernameToId.put(username, studentId);
            }

            rs.close();
        }

        pst.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading student usernames: " + e.getMessage());
    }

    jcomboStudentSelect.addActionListener(e -> {
        String selectedUsername = (String) jcomboStudentSelect.getSelectedItem();
        if (selectedUsername != null) {
            loadStudentInfo(usernameToId.get(selectedUsername));
        }
    });
    }
    private void loadStudentInfo(String studentId) {
    try (Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/complab", "postgres", "postgres")) {
        String sql = "SELECT student_id, username, password, first_name, last_name, section, year_level " +
                     "FROM student WHERE student_id = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, studentId);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            jtxtStudentId.setText(rs.getString("student_id"));
            jtxtUsername.setText(rs.getString("username"));
            jtxtFirstName.setText(rs.getString("first_name"));
            jtxtLastName.setText(rs.getString("last_name"));
            jtxtCPassword.setText(rs.getString("password"));
            jtxtPassword.setText(rs.getString("password"));
            

            // Set radio buttons
            String section = rs.getString("section");
            int year = rs.getInt("year_level");

            switch (section) {
                case "A": jradioSectionA.setSelected(true); break;
                case "B": jradioSectionB.setSelected(true); break;
                case "C": jradioSectionC.setSelected(true); break;
            }

            switch (year) {
                case 1: jradioYear1.setSelected(true); break;
                case 2: jradioYear2.setSelected(true); break;
                case 3: jradioYear3.setSelected(true); break;
                case 4: jradioYear4.setSelected(true); break;
            }
        }

        rs.close();
        pst.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading student info: " + e.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        section = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jcomboStudentSelect = new javax.swing.JComboBox<>();
        jtxtCPassword = new javax.swing.JTextField();
        jtxtStudentId = new javax.swing.JTextField();
        jtxtFirstName = new javax.swing.JTextField();
        jtxtLastName = new javax.swing.JTextField();
        jradioSectionA = new javax.swing.JRadioButton();
        jradioSectionB = new javax.swing.JRadioButton();
        jradioSectionC = new javax.swing.JRadioButton();
        jradioYear3 = new javax.swing.JRadioButton();
        jradioYear1 = new javax.swing.JRadioButton();
        jradioYear2 = new javax.swing.JRadioButton();
        jradioYear4 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jlblstudentid = new javax.swing.JLabel();
        jlblfname = new javax.swing.JLabel();
        jtxtUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtPassword = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jlbllname = new javax.swing.JLabel();
        jlblusername = new javax.swing.JLabel();
        jlblpass = new javax.swing.JLabel();
        jlblcpass = new javax.swing.JLabel();
        jlblyear = new javax.swing.JLabel();
        jlblsection = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcomboStudentSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a User" }));
        jcomboStudentSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboStudentSelectActionPerformed(evt);
            }
        });
        getContentPane().add(jcomboStudentSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 160, 30));

        jtxtCPassword.setText("Confirm Password");
        jtxtCPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtCPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtCPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 160, -1));

        jtxtStudentId.setText("Student ID");
        getContentPane().add(jtxtStudentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 160, -1));

        jtxtFirstName.setText("First Name");
        getContentPane().add(jtxtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 160, -1));

        jtxtLastName.setText("Last Name");
        getContentPane().add(jtxtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 160, -1));

        section.add(jradioSectionA);
        jradioSectionA.setText("A");
        jradioSectionA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradioSectionAActionPerformed(evt);
            }
        });
        getContentPane().add(jradioSectionA, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, -1, -1));

        section.add(jradioSectionB);
        jradioSectionB.setText("B");
        getContentPane().add(jradioSectionB, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 310, -1, -1));

        section.add(jradioSectionC);
        jradioSectionC.setText("C");
        getContentPane().add(jradioSectionC, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, -1, -1));

        buttonGroup1.add(jradioYear3);
        jradioYear3.setText("3rd");
        jradioYear3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradioYear3ActionPerformed(evt);
            }
        });
        getContentPane().add(jradioYear3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        buttonGroup1.add(jradioYear1);
        jradioYear1.setText("1st");
        jradioYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradioYear1ActionPerformed(evt);
            }
        });
        getContentPane().add(jradioYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, -1, -1));

        buttonGroup1.add(jradioYear2);
        jradioYear2.setText("2nd");
        jradioYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradioYear2ActionPerformed(evt);
            }
        });
        getContentPane().add(jradioYear2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, -1, -1));

        buttonGroup1.add(jradioYear4);
        jradioYear4.setText("4th");
        jradioYear4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradioYear4ActionPerformed(evt);
            }
        });
        getContentPane().add(jradioYear4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, -1, -1));

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, -1, -1));

        jlblstudentid.setForeground(new java.awt.Color(255, 0, 51));
        jlblstudentid.setText("student id");
        getContentPane().add(jlblstudentid, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, -1, -1));

        jlblfname.setForeground(new java.awt.Color(255, 0, 0));
        jlblfname.setText("firstname");
        getContentPane().add(jlblfname, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 160, -1, -1));

        jtxtUsername.setText("Username");
        getContentPane().add(jtxtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 160, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Edit User");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jtxtPassword.setText("Password");
        jtxtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 160, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Confirm Password:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Student ID:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Username:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("First Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Last Name:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Section:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Password:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Year Level:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, -1, -1));

        jlbllname.setForeground(new java.awt.Color(255, 0, 0));
        jlbllname.setText("lastname");
        getContentPane().add(jlbllname, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, -1, -1));

        jlblusername.setForeground(new java.awt.Color(255, 0, 0));
        jlblusername.setText("username");
        getContentPane().add(jlblusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, -1, -1));

        jlblpass.setForeground(new java.awt.Color(255, 0, 0));
        jlblpass.setText("password");
        getContentPane().add(jlblpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, -1, -1));

        jlblcpass.setForeground(new java.awt.Color(255, 0, 0));
        jlblcpass.setText("cpass");
        getContentPane().add(jlblcpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, -1, -1));

        jlblyear.setForeground(new java.awt.Color(255, 0, 0));
        jlblyear.setText("year");
        getContentPane().add(jlblyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 280, -1, -1));

        jlblsection.setForeground(new java.awt.Color(255, 0, 0));
        jlblsection.setText("section");
        getContentPane().add(jlblsection, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, -1, -1));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 380, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jradioSectionAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradioSectionAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jradioSectionAActionPerformed

    private void jradioYear3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradioYear3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jradioYear3ActionPerformed

    private void jradioYear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradioYear1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jradioYear1ActionPerformed

    private void jradioYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradioYear2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jradioYear2ActionPerformed

    private void jradioYear4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradioYear4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jradioYear4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String username = (String) jcomboStudentSelect.getSelectedItem();
        String studentId = usernameToId.get(username); // original ID

        String newStudentId = jtxtStudentId.getText().trim();
        String firstName = jtxtFirstName.getText().trim();
        String lastName = jtxtLastName.getText().trim();
        String password = jtxtPassword.getText();
        String cPassword = jtxtCPassword.getText();

        String section = jradioSectionA.isSelected() ? "A" : jradioSectionB.isSelected() ? "B" : jradioSectionC.isSelected() ? "C" : "";
        int yearLevel = jradioYear1.isSelected() ? 1 : jradioYear2.isSelected() ? 2 : jradioYear3.isSelected() ? 3 : jradioYear4.isSelected() ? 4 : null;

        boolean valid = true;

        // Username validation
        if (username == null || username.isEmpty()) {
            jlblusername.setText("* Username is required.");
            jlblusername.setVisible(true);
            valid = false;
        } else if (username.length() <= 8) {
            jlblusername.setText("* Username must be at least 8 characters.");
            jlblusername.setVisible(true);
            valid = false;
        } else if (!username.matches(".*\\d.*")) {
            jlblusername.setText("* Username must contain at least one number.");
            jlblusername.setVisible(true);
            valid = false;
        } else {
            jlblusername.setVisible(false);
        }

        // First name validation
        if (firstName.isEmpty()) {
            jlblfname.setText("* First Name is required.");
            jlblfname.setVisible(true);
            valid = false;
        } else {
            jlblfname.setVisible(false);
        }
           
        // Last name validation
        if (lastName.isEmpty()) {
            jlbllname.setText("* Last Name is required.");
            jlbllname.setVisible(true);
            valid = false;
        } else {
            jlbllname.setVisible(false);
        }

        // Student ID validation
        if (newStudentId.isEmpty()) {
            jlblstudentid.setText("* Student ID is required.");
            jlblstudentid.setVisible(true);
            valid = false;
        } else if (newStudentId.equals("*")) {
            jlblstudentid.setVisible(false);
        } else if (newStudentId.matches("\\d{10}")) {
            jlblstudentid.setVisible(false);
        } else {
            jlblstudentid.setText("* Enter exactly 10 digits or a single (*)");
            jlblstudentid.setVisible(true);
            valid = false;
        }

        // Password validation
        if (password.isEmpty()) {
            jlblpass.setText("* Password is required.");
            jlblpass.setVisible(true);
            valid = false;
        } else if (password.length() <= 8) {
            jlblpass.setText("* Password must be at least 8 characters.");
            jlblpass.setVisible(true);
            valid = false;
        } else if (!password.matches(".*\\d.*")) {
            jlblpass.setText("* Password must contain at least one number.");
            jlblpass.setVisible(true);
            valid = false;
        } else {
            jlblpass.setVisible(false);
        }

        // Confirm password validation
        if (cPassword.isEmpty() || !password.equals(cPassword)) {
            jlblcpass.setText("* Password does not match.");
            jlblcpass.setVisible(true);
            valid = false;
        } else {
            jlblcpass.setVisible(false);
        }

        // Year level validation
        if (!jradioYear1.isSelected() && !jradioYear2.isSelected() && !jradioYear3.isSelected() && !jradioYear4.isSelected()) {
            jlblsection.setText("* Year level is required.");
            jlblsection.setVisible(true);
            valid = false;
        } else {
            jlblsection.setVisible(false);
        }

        // Section validation
        if (!jradioSectionA.isSelected() && !jradioSectionB.isSelected() && !jradioSectionC.isSelected()) {
            jlblsection.setText("* Section is required.");
            jlblsection.setVisible(true);
            valid = false;
        } else {
            jlblsection.setVisible(false);
        }

        // 🚫 Stop if validation fails
        if (!valid) return;
        
        // ✅ Update DB
        try (Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/complab", "postgres", "postgres")) {
            String sql = "UPDATE student SET student_id = ?, first_name = ?, last_name = ?, password = ?, section = ?, year_level = ? WHERE student_id = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            String finalStudentId = newStudentId;
                if (newStudentId.equals("*")) {
                    // Get the max student_id that is purely numeric and 1 to 5 digits (e.g., 1, 2, 3, ... 99999)
                    String maxIdQuery = "SELECT MAX(CAST(student_id AS INTEGER)) FROM public.student WHERE student_id ~ '^\\d{1,5}$'";
                    PreparedStatement maxIdStmt = con.prepareStatement(maxIdQuery);
                    ResultSet rsMaxId = maxIdStmt.executeQuery();

                    int nextId = 1;
                    if (rsMaxId.next() && rsMaxId.getString(1) != null) {
                        nextId = rsMaxId.getInt(1) + 1;
                    }

                    finalStudentId = String.valueOf(nextId);
                }
            
            pst.setString(1, finalStudentId);
            pst.setString(2, firstName);
            pst.setString(3, lastName);
            pst.setString(4, password);
            pst.setString(5, section);
            pst.setInt(6, yearLevel);
            pst.setString(7, studentId); // original ID
                
            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Student info updated successfully!");
                if (!finalStudentId.equals(studentId)) {
                    int index = loggedInStudentIds.indexOf(studentId);
                    if (index != -1) {
                        loggedInStudentIds.set(index, finalStudentId);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Update failed.");
            }

            pst.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error updating student info: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jcomboStudentSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboStudentSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcomboStudentSelectActionPerformed

    private void jtxtCPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtCPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtCPasswordActionPerformed

    private void jtxtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtPasswordActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            // Close current window
    this.dispose();

    // Open MainWindow
    mainwindow mainWin = new mainwindow(loggedInStudentIds, loginTime);
    mainWin.setVisible(true);
    mainWin.setLocationRelativeTo(null); // Optional: center the window                // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ArrayList<String> studentIds = new ArrayList<>();
        studentIds.add("studentId1");
        studentIds.add("studentId2");
        studentIds.add("studentId3");
        studentIds.add("studentId4");
        studentIds.add("studentId5");

        String loginTime = java.time.LocalDateTime.now().format(
            java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")
        );

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new edituser(studentIds, loginTime).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> jcomboStudentSelect;
    private javax.swing.JLabel jlblcpass;
    private javax.swing.JLabel jlblfname;
    private javax.swing.JLabel jlbllname;
    private javax.swing.JLabel jlblpass;
    private javax.swing.JLabel jlblsection;
    private javax.swing.JLabel jlblstudentid;
    private javax.swing.JLabel jlblusername;
    private javax.swing.JLabel jlblyear;
    private javax.swing.JRadioButton jradioSectionA;
    private javax.swing.JRadioButton jradioSectionB;
    private javax.swing.JRadioButton jradioSectionC;
    private javax.swing.JRadioButton jradioYear1;
    private javax.swing.JRadioButton jradioYear2;
    private javax.swing.JRadioButton jradioYear3;
    private javax.swing.JRadioButton jradioYear4;
    private javax.swing.JTextField jtxtCPassword;
    private javax.swing.JTextField jtxtFirstName;
    private javax.swing.JTextField jtxtLastName;
    private javax.swing.JTextField jtxtPassword;
    private javax.swing.JTextField jtxtStudentId;
    private javax.swing.JTextField jtxtUsername;
    private javax.swing.ButtonGroup section;
    // End of variables declaration//GEN-END:variables
}

